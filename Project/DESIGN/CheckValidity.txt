FUNCTION checkValidity: Takes defect_arr structure and Defect line as input

 //Create two local variables  and intialize them 
  CREATE count intialize it to 0
  CREATE *s dynamically allocate the memory 
  intialize s with Defect line

  //Tokenize and dynamically allocate memory and store each variables 
  CREATE token variable intialize it to STRTOK FUNCTION with s , :  
  as parameters

  INSIDE WHILE LOOP with condition token not equal to NULL
         INCREMENT count
          INSIDE SWITCH CASE LOOP with count as parameter
            CASE when count equals to 1 then 
            dynamically allocate memory for defectID and store token value 
            and BREAK statement 

            CASE  when count equals to 2 then 
            dynamically allocate memory for description and store token value 
            and BREAK statement 

            CASE  when count equals to 3 then 
            dynamically allocate memory for moduleName and store token value 
            and BREAK statement 

            CASE  when count equals to 4 then 
            dynamically allocate memory for functionalArea and store token value 
            and BREAK statement 

            CASE  when count equals to 5 then 
            dynamically allocate memory for data and store token value 
            and BREAK statement

            CASE  when count equals to 6 then 
            dynamically allocate memory for status and store token value 
            and BREAK statement  

            CASE  when count equals to 7 then 
            dynamically allocate memory for type and store token value 
            and BREAK statement

            default it is BREAK statement
            END OF SWITCH CASE LOOP 
        strtok is used again for next word with parameters NULL and :
    
    END OF WHILE LOOP

//To check Validity using count variable
 IF count is equal to 7 
    IF status is open 
      call validDefect FUNCTION
 ELSE
    call invalidDefect FUNCTION
    
